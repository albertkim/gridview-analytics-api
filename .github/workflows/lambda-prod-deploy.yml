name: LambdaDeploy

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-west-2
  LAMBDA_FUNCTION_NAME: gridview-analytics-api-prod
  CF_DISTRIBUTION_ID: E90QTKVUQ5WWC

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Build package 
        id: build-lambda-package
        env:
          PACKAGE_ID: ${{ github.sha }}
        run: |
          npm_config_target_arch=x64 npm_config_target_platform=linux npm_config_target_libc=glibc yarn install --production
          rm -rf node_modules/canvas
          yarn run build
          mkdir package
          cp -r dist/. package
          cp -r node_modules package
          mkdir package/database
          cp -r database/migrations package/database
          cp -r database/database.db package/database
          cp -r database/rezonings.json package/database
          cd package && zip -r ../package-$PACKAGE_ID.zip *

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_2146 }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_2146 }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update Lambda function
        id: update-lambda-function
        env:
          PACKAGE_ID: ${{ github.sha }}
        run: |
          aws lambda update-function-code --function-name $LAMBDA_FUNCTION_NAME --zip-file fileb://package-$PACKAGE_ID.zip
          aws cloudfront create-invalidation --distribution-id $CF_DISTRIBUTION_ID --paths "/api/v1/*"